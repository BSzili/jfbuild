AC_INIT([Build Engine], [0.1], [jf@jonof.id.au], [build])

AC_CANONICAL_HOST

AC_CONFIG_HEADERS([config.h])
AM_INIT_AUTOMAKE

AC_PROG_CXX
AC_PROG_CC
AC_PROG_RANLIB


enable_superbuild=yes
enable_polymost=yes
enable_opengl=yes
enable_dynamic_opengl=yes
enable_asm=yes
enable_gtk=yes
enable_dynamic_gtk=yes
AC_ARG_ENABLE([superbuild], [AS_HELP_STRING([--disable-superbuild],
	      	[disables 'super build' features])], [
	if test x$enableval = xno; then
		enable_superbuild=no
	fi
])
AC_ARG_ENABLE([polymost], [AS_HELP_STRING([--disable-polymost],
	      	[disables Polymost features])], [
	if test x$enableval = xno; then
		enable_polymost=no
	fi
])
AC_ARG_ENABLE([opengl], [AS_HELP_STRING([--disable-opengl],
	      	[disables Polymost OpenGL features])], [
	if test x$enableval = xno; then
		enable_opengl=no
	fi
])
AC_ARG_ENABLE([dynamic-opengl], [AS_HELP_STRING([--disable-dynamic-opengl],
	      	[use compile-time linkage to OpenGL libs])], [
	if test x$enableval = xno; then
		enable_dynamic_opengl=no
	fi
])
AC_ARG_ENABLE([assembly], [AS_HELP_STRING([--disable-assembly],
	      	[disables use of assembly code])], [
	if test x$enableval = xno; then
		enable_asm=no
	fi
])
AC_ARG_ENABLE([gtk], [AS_HELP_STRING([--disable-gtk],[disables use of GTK+])], [
	if test x$enableval = xno; then
		enable_gtk=no
	fi
])
AC_ARG_ENABLE([dynamic-gtk], [AS_HELP_STRING([--disable-dynamic-gtk],
	      	[use compile-time linkage to GTK+ libs])], [
	if test x$enableval = xno; then
		enable_dynamic_gtk=no
	fi
])

case $host_cpu in
  i?86*)
    ;;
  *)
    AC_MSG_NOTICE([assembly code not supported for $host_cpu. Disabling])
    enable_asm=no
    ;;
esac

AM_CONDITIONAL([SUPERBUILD],     [test x$enable_superbuild     = xyes])
AM_CONDITIONAL([POLYMOST],       [test x$enable_polymost       = xyes])
AM_CONDITIONAL([USE_OPENGL],     [test x$enable_opengl         = xyes])
AM_CONDITIONAL([DYNAMIC_OPENGL], [test x$enable_dynamic_opengl = xyes])
AM_CONDITIONAL([NOASM],          [test x$enable_asm            = xno])
AM_CONDITIONAL([LINKED_GTK],     [test x$enable_dynamic_gtk    = xno])


case $host_os in
  *mingw32*)
    host_platform="windows"
    ;;
  *)
    host_platform="other"
    ;;
esac
AM_CONDITIONAL([RENDERTYPEWIN], [test x$host_platform = xwindows])
AM_CONDITIONAL([RENDERTYPESDL], [test x$host_platform = xother])


if test x$host_platform = xwindows; then

	directx_sdk=
	AC_ARG_WITH([directx-sdk], [AS_HELP_STRING([--with-directx-sdk=PATH],
		    	[use the DirectX SDK located at PATH])], [
		directx_sdk=$withval
	])
	if test x$directx_sdk = x; then
		AC_MSG_ERROR([Please specify a DirectX SDK to use with --with-directx-sdk=/path/to/sdk])
	fi
	DIRECTX_SDK_CPPFLAGS=-I$directx_sdk/include
	DIRECTX_SDK_LDFLAGS=-L$directx_sdk/lib
	WINDOWS_CPPFLAGS="-DUNDERSCORES"
	WINDOWS_LDADD="-lmingwex -lwsock32 -lcomctl32 -ldxguid -mwindows"
	AC_SUBST([DIRECTX_SDK_CPPFLAGS])
	AC_SUBST([DIRECTX_SDK_LDFLAGS])
	AC_SUBST([WINDOWS_CPPFLAGS])
	AC_SUBST([WINDOWS_LDADD])

	AC_CHECK_PROG([WINDRES], [windres], [windres])
	if test x$WINDRES = x; then
		AC_MSG_ERROR([WINDRES could not be found in the path. You're kinda screwed without it.])
	fi

else

	AM_PATH_SDL([1.2.0], [
		have_sdl=yes
		SDL_LIBS=`$SDL_CONFIG --libs`
		SDL_CFLAGS=`$SDL_CONFIG --cflags`
	], [
		have_sdl=no
		if test x$host_platform = xother; then
			AC_MSG_ERROR([No SDL library found])
		fi
	])

	PKG_CHECK_MODULES(GTK, gtk+-2.0, [have_gtk=yes], [have_gtk=no])
	if test x$enable_gtk = xno; then
		have_gtk=no
	fi
	AC_SUBST([GTK_CFLAGS])
	AC_SUBST([GTK_LIBS])

fi
AM_CONDITIONAL([HAVE_GTK2], [test x$have_gtk = xyes])

if test x$enable_asm = xyes; then
	AC_CHECK_PROG([NASM], [nasm], [nasm])
	if test x$NASM = x; then
		AC_MSG_ERROR([NASM could not be found in the path. To build without assembly code, use
			      --disable-assembly.])
	fi

	if test x$host_platform = xwindows; then
		NASMFLAGS="-f win32 -DUNDERSCORES"
	else
		NASMFLAGS="-f elf"
	fi
	AC_SUBST([NASMFLAGS])
fi


AC_C_INLINE
AC_C_BIGENDIAN
AC_TYPE_INT64_T
AC_TYPE_INT32_T
AC_TYPE_INT16_T
AC_TYPE_INT8_T
AC_TYPE_UINT64_T
AC_TYPE_UINT32_T
AC_TYPE_UINT16_T
AC_TYPE_UINT8_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_TYPE_SSIZE_T
AC_TYPE_INTPTR_T
AC_TYPE_UINTPTR_T
AC_CHECK_TYPES([ptrdiff_t])

AC_CONFIG_FILES([Makefile
		 libsquish/Makefile
		 src/Makefile
		 kenbuild/Makefile
		 tools/Makefile])
AC_OUTPUT

echo "------------------------------"
echo "  Superbuild features = $enable_superbuild"
echo "  Polymost            = $enable_polymost"
echo "  OpenGL              = $enable_opengl"
echo "    Runtime loading   = $enable_dynamic_opengl"
echo "  Use assembly        = $enable_asm"
echo "  GTK+ dialogs        = $enable_gtk"
echo "    Runtime loading   = $enable_dynamic_gtk"
